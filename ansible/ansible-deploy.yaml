---
- name: Deploy Infrastructure and Application with Ansible
  hosts: localhost
  connection: local
  gather_facts: False

  vars:
    vpc_name: "stockpricer-vpc"
    network: "10.0.0.0/16"
    aws_region: "eu-north-1"
    subnet_cidr: "10.0.1.0/24"
    subnet: "eu-north-1a"
    keypair: "amir_niv_pk"
    aws_centos_ami: "ami-04cdc91e49cb06165"
    server_type: "t3.micro"
    server_volume_size: 20
    server_name: "stockpricetracker"
    env: "dev"
    docker_image: "linoyk/stock-price-tracker"
    iam_role: "EC2SSMRole"

  tasks:
    - name: Create VPC
      amazon.aws.ec2_vpc_net:
        name: "{{ vpc_name }}"
        cidr_block: "{{ network }}"
        region: "{{ aws_region }}"
        state: present
        dns_hostnames: yes
        dns_support: yes
        tags:
          Name: "{{ vpc_name }}"
      register: vpc

    - name: Create Subnet
      amazon.aws.ec2_vpc_subnet:
        vpc_id: "{{ vpc.vpc.id }}"
        cidr: "{{ subnet_cidr }}"
        region: "{{ aws_region }}"
        az: "{{ subnet }}"
        map_public: yes
        state: present
        wait: yes
      register: subnet

    - name: Create EC2 instance with IAM Role for SSM
      amazon.aws.ec2_instance:
        image_id: "{{ aws_centos_ami }}"
        instance_type: "{{ server_type }}"
        key_name: "{{ keypair }}"
        region: "{{ aws_region }}"
        vpc_subnet_id: "{{ subnet.subnet.id }}"
        iam_instance_profile_name: "{{ iam_role }}"
        wait: yes
        exact_count: 1
        state: running
      register: ec2_instance

    - name: Allow SSH and HTTP in security group
      amazon.aws.ec2_security_group:
        name: default
        description: Allow SSH and HTTP
        vpc_id: "{{ vpc.vpc.id }}"
        region: "{{ aws_region }}"
        state: present
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
        tags:
          Name: default-sg

    - name: Install Docker on EC2 instance via SSM
      amazon.aws.ssm:
        region: "{{ aws_region }}"
        instance_ids: "{{ ec2_instance.instances[0].id }}"
        document_name: "AWS-RunShellScript"
        parameters:
          commands:
            - sudo yum update -y
            - sudo amazon-linux-extras install docker -y
            - sudo systemctl start docker
            - sudo systemctl enable docker
            - sudo usermod -aG docker ec2-user
        timeout_seconds: 600

    - name: Pull Docker image and run container on EC2 via SSM
      amazon.aws.ssm:
        region: "{{ aws_region }}"
        instance_ids: "{{ ec2_instance.instances[0].id }}"
        document_name: "AWS-RunShellScript"
        parameters:
          commands:
            - sudo docker pull "{{ docker_image }}"
            - sudo docker run -d -p 80:80 "{{ docker_image }}"
        timeout_seconds: 600

    - name: Output instance public IP
      debug:
        msg: "Instance public IP: {{ ec2_instance.instances[0].public_ip_address }}"
