---
- name: Deploy Infrastructure and Install Docker via SSH
  hosts: localhost
  connection: local
  gather_facts: False

  vars:
    vpc_name: "stockpricer-vpc"
    network: "10.0.0.0/16"
    aws_region: "eu-north-1"
    subnet_cidr: "10.0.1.0/24"
    subnet: "eu-north-1a"
    keypair: "amir_niv_pk"
    aws_centos_ami: "ami-04cdc91e49cb06165"
    server_type: "t3.micro"
    server_name: "stockpricetracker"
    docker_image: "linoyk/stock-price-tracker"
    ansible_ssh_private_key_file: ~/.ssh/amir_niv_pk.pem  # Use the private key from GitHub Secrets

  tasks:
    - name: Create VPC
      amazon.aws.ec2_vpc_net:
        name: "{{ vpc_name }}"
        cidr_block: "{{ network }}"
        region: "{{ aws_region }}"
        state: present
        dns_hostnames: yes
        dns_support: yes
        tags:
          Name: "{{ vpc_name }}"
      register: vpc

    - name: Create Internet Gateway (IGW)
      amazon.aws.ec2_vpc_igw:
        vpc_id: "{{ vpc.vpc.id }}"
        region: "{{ aws_region }}"
        state: present
        tags:
          Name: "IGW for {{ vpc_name }}"
      register: igw

    - name: Create Subnet
      amazon.aws.ec2_vpc_subnet:
        vpc_id: "{{ vpc.vpc.id }}"
        cidr: "{{ subnet_cidr }}"
        region: "{{ aws_region }}"
        az: "{{ subnet }}"
        map_public: yes
        state: present
        wait: yes
      register: subnet

    - name: Create Route table for public Subnet
      amazon.aws.ec2_vpc_route_table:
        vpc_id: "{{ vpc.vpc.id }}"
        region: "{{ aws_region }}"
        state: present
        subnets:
          - "{{ subnet.subnet.id }}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ igw.gateway_id }}"
        tags:
          Name: "{{ vpc_name }}_public_rt"

    - name: Create Security Group for VPC
      amazon.aws.ec2_security_group:
        name: "{{ vpc_name }} VPC SG"
        description: "Security group for {{ vpc_name }}"
        vpc_id: "{{ vpc.vpc.id }}"
        region: "{{ aws_region }}"
        state: present
        rules:
          - proto: tcp
            ports:
              - 22
              - 80
            cidr_ip: 0.0.0.0/0
      register: sg

    - name: Create EC2 instance
      amazon.aws.ec2_instance:
        image_id: "{{ aws_centos_ami }}"
        instance_type: "{{ server_type }}"
        key_name: "{{ keypair }}"
        region: "{{ aws_region }}"
        vpc_subnet_id: "{{ subnet.subnet.id }}"
        security_group: "{{ sg.group_id }}"
        wait: yes
        exact_count: 1
        state: running
      register: ec2_instance

    - name: Wait for SSH to become available
      wait_for:
        host: "{{ ec2_instance.instances[0].public_ip_address }}"
        port: 22
        timeout: 300

    - name: Install Docker on EC2 instance via SSH
      ansible.builtin.shell: |
        sudo yum update -y
        sudo amazon-linux-extras install docker -y
        sudo systemctl start docker
        sudo systemctl enable docker
        sudo usermod -aG docker ubuntu
      vars:
        ansible_host: "{{ ec2_instance.instances[0].public_ip_address }}"
        ansible_connection: ssh
        ansible_ssh_user: ubuntu
        ansible_ssh_private_key_file: ~/.ssh/amir_niv_pk.pem

    - name: Pull Docker image from Docker Hub and run it
      ansible.builtin.shell: |
        sudo docker pull {{ docker_image }}
        sudo docker run -d -p 80:80 {{ docker_image }}
      vars:
        ansible_host: "{{ ec2_instance.instances[0].public_ip_address }}"
        ansible_connection: ssh
        ansible_ssh_user: ubuntu
        ansible_ssh_private_key_file: ~/.ssh/amir_niv_pk.pem

    - name: Output instance public IP
      debug:
        msg: "Instance public IP: {{ ec2_instance.instances[0].public_ip_address }}"
