---
- name: Deploy Infrastructure and Install Docker via SSM
  hosts: localhost
  connection: local
  gather_facts: False

  vars:
    vpc_name: "stockpricer-vpc"
    network: "10.0.0.0/16"
    aws_region: "eu-north-1"
    subnet_cidr: "10.0.1.0/24"
    subnet: "eu-north-1a"
    keypair: "amir_niv_pk"
    aws_centos_ami: "ami-04cdc91e49cb06165"
    server_type: "t3.micro"
    server_name: "stockpricetracker"

  tasks:
    - name: Create VPC
      amazon.aws.ec2_vpc_net:
        name: "{{ vpc_name }}"
        cidr_block: "{{ network }}"
        region: "{{ aws_region }}"
        state: present
        dns_hostnames: yes
        dns_support: yes
        tags:
          Name: "{{ vpc_name }}"
      register: vpc

    - name: Create Subnet
      amazon.aws.ec2_vpc_subnet:
        vpc_id: "{{ vpc.vpc.id }}"
        cidr: "{{ subnet_cidr }}"
        region: "{{ aws_region }}"
        az: "{{ subnet }}"
        map_public: yes
        state: present
        wait: yes
      register: subnet

    - name: Create EC2 instance
      amazon.aws.ec2_instance:
        image_id: "{{ aws_centos_ami }}"
        instance_type: "{{ server_type }}"
        key_name: "{{ keypair }}"
        region: "{{ aws_region }}"
        vpc_subnet_id: "{{ subnet.subnet.id }}"
        wait: yes
        exact_count: 1
        state: running
      register: ec2_instance

    - name: Allow SSH and HTTP in security group
      amazon.aws.ec2_security_group:
        name: default
        description: Allow SSH and HTTP
        vpc_id: "{{ vpc.vpc.id }}"
        region: "{{ aws_region }}"
        state: present
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
        tags:
          Name: default-sg

    - name: Install Docker via AWS SSM
      vars:
        ansible_connection: community.aws.aws_ssm
      community.aws.ssm_send_command:
        instance_ids:
          - "{{ ec2_instance.instance_ids[0] }}"
        document_name: "AWS-RunShellScript"
        comment: "Install Docker on EC2"
        parameters:
          commands:
            - "sudo yum update -y"
            - "sudo amazon-linux-extras install docker -y"
            - "sudo systemctl start docker"
            - "sudo systemctl enable docker"
            - "sudo usermod -aG docker ec2-user"
        region: "{{ aws_region }}"
      register: ssm_result

    - name: Wait for SSM command to complete
      community.aws.ssm_command_wait:
        command_id: "{{ ssm_result.command.command_id }}"
        instance_id: "{{ ec2_instance.instance_ids[0] }}"
        region: "{{ aws_region }}"

    - name: Output instance public IP
      debug:
        msg: "Instance public IP: {{ ec2_instance.instances[0].public_ip_address }}"
