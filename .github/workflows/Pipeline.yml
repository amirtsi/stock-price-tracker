name: CI/CD Pipeline for React App and Ansible Deploy

on:
  push:
    branches:
      - main  # Trigger on push to the main branch

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code from the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Node.js environment for building the React app
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: npm install

      # Step 4: Run unit tests
      - name: Run unit tests
        run: npm test

      # Step 5: Set up Docker and Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 6: Log in to DockerHub using Docker's official GitHub Action
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 7: Build Docker image
      - name: Build Docker image
        run: docker build -t linoyk/stock-price-tracker .

      # Step 8: Push Docker image to DockerHub
      - name: Push Docker image
        run: docker push linoyk/stock-price-tracker

      # Step 9: Set up Python environment for Ansible
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      # Step 10: Install Ansible and dependencies
      - name: Install Ansible and Boto3
        run: |
          python -m pip install --upgrade pip
          pip install ansible boto3

      # Step 11: Install AWS and community Ansible Collections
      - name: Install AWS Ansible Collection
        run: |
          ansible-galaxy collection install amazon.aws
          ansible-galaxy collection install community.aws
          # Verify installation
          ansible-galaxy collection list

      # Step 12: Run Ansible Playbook to Provision EC2 Instance and Pull Docker Image
      - name: Run Ansible Playbook
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: ansible-playbook ./ansible/ansible-deploy.yaml -i localhost, -vvv
